import { html, repeat } from '@microsoft/fast-element';
import type { FoundationFormsIntro } from './foundation-forms-intro';
import {
  StandardRendererOptions,
  StringRendererOptions,
  UiSchema,
  mustMatch,
} from '@genesislcap/foundation-forms';
import { FormDatum } from './foundation-forms-intro';

// In the browser page, Click on "Copy autogenerated UI Schema".
// This button is only visible in the dev mode, when foundation-form attribute :uischema is not defined.
const UI_SCHEMA: UiSchema = {
  type: 'VerticalLayout',
  elements: [
    { type: 'Control', scope: '#/properties/TITLE', label: 'Title' },
    {
      type: 'Control',
      scope: '#/properties/USER_NAME',
      label: 'Name',
      options: <StringRendererOptions>{
        textarea: true,
      },
    },
    { type: 'Control', scope: '#/properties/USER_TYPE', label: 'Type' },
    {
      type: 'Control',
      scope: '#/properties/WEBSITE',
      options: <StandardRendererOptions>{
        hidden: true,
      },
    },
    { type: 'Control', scope: '#/properties/USER_PROFILES' },
    { type: 'Control', scope: '#/properties/ACCESS_TYPE' },
    {
      type: 'Control',
      scope: '#/properties/ADDRESS_LINE_1',
      options: <StandardRendererOptions>{
        validateFn: mustMatch('ADDRESS_LINE_2'),
      },
    },
    { type: 'Control', scope: '#/properties/ADDRESS_LINE_2' },
    { type: 'Control', scope: '#/properties/ADDRESS_LINE_3' },
    { type: 'Control', scope: '#/properties/ADDRESS_LINE_4' },
    { type: 'Control', scope: '#/properties/CITY' },
    { type: 'Control', scope: '#/properties/COMPANY_ID' },
    { type: 'Control', scope: '#/properties/COMPANY_NAME' },
    { type: 'Control', scope: '#/properties/COUNTRY' },
    { type: 'Control', scope: '#/properties/DOMAIN' },
    { type: 'Control', scope: '#/properties/EMAIL_ADDRESS' },
    { type: 'Control', scope: '#/properties/FIRST_NAME' },
    { type: 'Control', scope: '#/properties/LAST_LOGIN' },
    { type: 'Control', scope: '#/properties/LAST_NAME' },
    { type: 'Control', scope: '#/properties/MOBILE_NUMBER' },
    { type: 'Control', scope: '#/properties/ONE_TIME_PASSWORD' },
    { type: 'Control', scope: '#/properties/POSTAL_CODE' },
    { type: 'Control', scope: '#/properties/REGION' },
    { type: 'Control', scope: '#/properties/TELEPHONE_NUMBER_DIRECT' },
    { type: 'Control', scope: '#/properties/TELEPHONE_NUMBER_OFFICE' },
  ],
};

export const FoundationFormsIntroTemplate = html<FoundationFormsIntro>`
  <tutorial-container :route="${() => 'foundation-forms-intro'}">
      <div class="intro-container">
        <zero-card>
          <foundation-form
            @change="${(x,ctx) => x.handleChange(ctx.event)}"
            resourceName="EVENT_INSERT_USER"
            :uischema="${() => UI_SCHEMA}"
          ></foundation-form>
        </zero-card>
        <zero-card>
            <h2>Form data</h2>
            ${repeat(x => x.formData, html<FormDatum>`
                <div class="form-datum">
                    <label>${x => x.key}</label><br>
                    <b>${x => x.value}</b>
                </div>
            `)}
        </zero-card>
      </div>
  </tutorial-container>
`;
